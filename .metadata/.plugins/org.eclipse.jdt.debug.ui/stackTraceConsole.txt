 while (rem != 0) {

            if (m.containsKey(rem)) {

                // if the rem is already present, find the
                // index and append ( )

                int index = m.get(rem);
                String part1 = result.substring(0, index);
                String part2 = "("
                               + result.substring(
                                   index, result.length())
                               + ")";
                return part1 + part2;
            }

            // continue updating the map and appending quo
            // which was generated by dividing rem with den

            m.put(rem, result.length());
            quo = rem / den;
            result.append(String.valueOf(quo));

            // update rem
            rem = (rem % den) * 10;
        }
        return result.toString();
    }

    // Driver code
    public static void main(String[] args)
    {
        int num = 1;
        int den = 3;

        String resString1 = calculateFraction(num, den);

        num = 1;
        den = 7;

        String resString2 = calculateFraction(num, den);

        System.out.println(resString1);
        System.out.println(resString2);
    }
}

 46  
problemStatments9/ProblemStatment9.java
@@ -0,0 +1,46 @@
package problemStatments9;